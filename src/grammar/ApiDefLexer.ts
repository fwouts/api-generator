// Generated from src/grammar/ApiDef.g4 by ANTLR 4.6-SNAPSHOT

import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";

export class ApiDefLexer extends Lexer {
  public static readonly T__0 = 1;
  public static readonly T__1 = 2;
  public static readonly T__2 = 3;
  public static readonly T__3 = 4;
  public static readonly T__4 = 5;
  public static readonly T__5 = 6;
  public static readonly T__6 = 7;
  public static readonly T__7 = 8;
  public static readonly T__8 = 9;
  public static readonly T__9 = 10;
  public static readonly T__10 = 11;
  public static readonly T__11 = 12;
  public static readonly T__12 = 13;
  public static readonly T__13 = 14;
  public static readonly T__14 = 15;
  public static readonly T__15 = 16;
  public static readonly T__16 = 17;
  public static readonly T__17 = 18;
  public static readonly T__18 = 19;
  public static readonly T__19 = 20;
  public static readonly NAME = 21;
  public static readonly LINEBREAK = 22;
  public static readonly WHITESPACE = 23;
  public static readonly BLOCK_COMMENT = 24;
  public static readonly LINE_COMMENT = 25;
  public static readonly modeNames: string[] = ["DEFAULT_MODE"];

  public static readonly ruleNames: string[] = [
    "T__0",
    "T__1",
    "T__2",
    "T__3",
    "T__4",
    "T__5",
    "T__6",
    "T__7",
    "T__8",
    "T__9",
    "T__10",
    "T__11",
    "T__12",
    "T__13",
    "T__14",
    "T__15",
    "T__16",
    "T__17",
    "T__18",
    "T__19",
    "NAME",
    "LINEBREAK",
    "WHITESPACE",
    "BLOCK_COMMENT",
    "LINE_COMMENT",
  ];

  private static readonly _LITERAL_NAMES: (string | undefined)[] = [
    undefined,
    "'endpoint'",
    "':'",
    "'->'",
    "'@headers'",
    "'('",
    "')'",
    "'GET'",
    "'POST'",
    "'PUT'",
    "'DELETE'",
    "'/'",
    "'type'",
    "'='",
    "'|'",
    "'[]'",
    "'{'",
    "'}'",
    "'?'",
    "'@'",
    "';'",
  ];
  private static readonly _SYMBOLIC_NAMES: (string | undefined)[] = [
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    "NAME",
    "LINEBREAK",
    "WHITESPACE",
    "BLOCK_COMMENT",
    "LINE_COMMENT",
  ];
  public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(
    ApiDefLexer._LITERAL_NAMES,
    ApiDefLexer._SYMBOLIC_NAMES,
    [],
  );

  @Override
  @NotNull
  public get vocabulary(): Vocabulary {
    return ApiDefLexer.VOCABULARY;
  }

  constructor(input: CharStream) {
    super(input);
    this._interp = new LexerATNSimulator(ApiDefLexer._ATN, this);
  }

  @Override
  public get grammarFileName(): string {
    return "ApiDef.g4";
  }

  @Override
  public get ruleNames(): string[] {
    return ApiDefLexer.ruleNames;
  }

  @Override
  public get serializedATN(): string {
    return ApiDefLexer._serializedATN;
  }

  @Override
  public get modeNames(): string[] {
    return ApiDefLexer.modeNames;
  }

  public static readonly _serializedATN: string = "\x03\uAF6F\u8320\u479D\uB75C\u4880\u1605\u191C\uAB37\x02\x1B\xA5\b\x01" +
    "\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
    "\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
    "\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
    "\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
    "\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x03\x02\x03\x02\x03\x02" +
    "\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04" +
    "\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05" +
    "\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03" +
    "\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03" +
    "\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03" +
    "\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03" +
    "\x12\x03\x12\x03\x13\x03\x13\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03" +
    "\x16\x07\x16\x7F\n\x16\f\x16\x0E\x16\x82\v\x16\x03\x17\x03\x17\x03\x18" +
    "\x06\x18\x87\n\x18\r\x18\x0E\x18\x88\x03\x18\x03\x18\x03\x19\x03\x19\x03" +
    "\x19\x03\x19\x07\x19\x91\n\x19\f\x19\x0E\x19\x94\v\x19\x03\x19\x03\x19" +
    "\x03\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x07\x1A\x9F\n" +
    "\x1A\f\x1A\x0E\x1A\xA2\v\x1A\x03\x1A\x03\x1A\x03\x92\x02\x02\x1B\x03\x02" +
    "\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11" +
    "\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10" +
    "\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14'\x02\x15)\x02\x16+\x02\x17-\x02" +
    "\x18/\x02\x191\x02\x1A3\x02\x1B\x03\x02\x06\x04\x02C\\c|\x05\x022;C\\" +
    'c|\x04\x02\f\f\x0F\x0F\x05\x02\v\v\x0E\x0E""\xA8\x02\x03\x03\x02\x02' +
    "\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02" +
    "\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02" +
    "\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02" +
    "\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02" +
    "\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02" +
    "\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02'\x03\x02\x02\x02\x02)" +
    "\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02" +
    "\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x035\x03\x02\x02\x02" +
    "\x05>\x03\x02\x02\x02\x07@\x03\x02\x02\x02\tC\x03\x02\x02\x02\vL\x03\x02" +
    "\x02\x02\rN\x03\x02\x02\x02\x0FP\x03\x02\x02\x02\x11T\x03\x02\x02\x02" +
    "\x13Y\x03\x02\x02\x02\x15]\x03\x02\x02\x02\x17d\x03\x02\x02\x02\x19f\x03" +
    "\x02\x02\x02\x1Bk\x03\x02\x02\x02\x1Dm\x03\x02\x02\x02\x1Fo\x03\x02\x02" +
    "\x02!r\x03\x02\x02\x02#t\x03\x02\x02\x02%v\x03\x02\x02\x02'x\x03\x02" +
    "\x02\x02)z\x03\x02\x02\x02+|\x03\x02\x02\x02-\x83\x03\x02\x02\x02/\x86" +
    "\x03\x02\x02\x021\x8C\x03\x02\x02\x023\x9A\x03\x02\x02\x0256\x07g\x02" +
    "\x0267\x07p\x02\x0278\x07f\x02\x0289\x07r\x02\x029:\x07q\x02\x02:;\x07" +
    "k\x02\x02;<\x07p\x02\x02<=\x07v\x02\x02=\x04\x03\x02\x02\x02>?\x07<\x02" +
    "\x02?\x06\x03\x02\x02\x02@A\x07/\x02\x02AB\x07@\x02\x02B\b\x03\x02\x02" +
    "\x02CD\x07B\x02\x02DE\x07j\x02\x02EF\x07g\x02\x02FG\x07c\x02\x02GH\x07" +
    "f\x02\x02HI\x07g\x02\x02IJ\x07t\x02\x02JK\x07u\x02\x02K\n\x03\x02\x02" +
    "\x02LM\x07*\x02\x02M\f\x03\x02\x02\x02NO\x07+\x02\x02O\x0E\x03\x02\x02" +
    "\x02PQ\x07I\x02\x02QR\x07G\x02\x02RS\x07V\x02\x02S\x10\x03\x02\x02\x02" +
    "TU\x07R\x02\x02UV\x07Q\x02\x02VW\x07U\x02\x02WX\x07V\x02\x02X\x12\x03" +
    "\x02\x02\x02YZ\x07R\x02\x02Z[\x07W\x02\x02[\\\x07V\x02\x02\\\x14\x03\x02" +
    "\x02\x02]^\x07F\x02\x02^_\x07G\x02\x02_`\x07N\x02\x02`a\x07G\x02\x02a" +
    "b\x07V\x02\x02bc\x07G\x02\x02c\x16\x03\x02\x02\x02de\x071\x02\x02e\x18" +
    "\x03\x02\x02\x02fg\x07v\x02\x02gh\x07{\x02\x02hi\x07r\x02\x02ij\x07g\x02" +
    "\x02j\x1A\x03\x02\x02\x02kl\x07?\x02\x02l\x1C\x03\x02\x02\x02mn\x07~\x02" +
    "\x02n\x1E\x03\x02\x02\x02op\x07]\x02\x02pq\x07_\x02\x02q \x03\x02\x02" +
    '\x02rs\x07}\x02\x02s"\x03\x02\x02\x02tu\x07\x7F\x02\x02u$\x03\x02\x02' +
    "\x02vw\x07A\x02\x02w&\x03\x02\x02\x02xy\x07B\x02\x02y(\x03\x02\x02\x02" +
    "z{\x07=\x02\x02{*\x03\x02\x02\x02|\x80\t\x02\x02\x02}\x7F\t\x03\x02\x02" +
    "~}\x03\x02\x02\x02\x7F\x82\x03\x02\x02\x02\x80~\x03\x02\x02\x02\x80\x81" +
    "\x03\x02\x02\x02\x81,\x03\x02\x02\x02\x82\x80\x03\x02\x02\x02\x83\x84" +
    "\t\x04\x02\x02\x84.\x03\x02\x02\x02\x85\x87\t\x05\x02\x02\x86\x85\x03" +
    "\x02\x02\x02\x87\x88\x03\x02\x02\x02\x88\x86\x03\x02\x02\x02\x88\x89\x03" +
    "\x02\x02\x02\x89\x8A\x03\x02\x02\x02\x8A\x8B\b\x18\x02\x02\x8B0\x03\x02" +
    "\x02\x02\x8C\x8D\x071\x02\x02\x8D\x8E\x07,\x02\x02\x8E\x92\x03\x02\x02" +
    "\x02\x8F\x91\v\x02\x02\x02\x90\x8F\x03\x02\x02\x02\x91\x94\x03\x02\x02" +
    "\x02\x92\x93\x03\x02\x02\x02\x92\x90\x03\x02\x02\x02\x93\x95\x03\x02\x02" +
    "\x02\x94\x92\x03\x02\x02\x02\x95\x96\x07,\x02\x02\x96\x97\x071\x02\x02" +
    "\x97\x98\x03\x02\x02\x02\x98\x99\b\x19\x03\x02\x992\x03\x02\x02\x02\x9A" +
    "\x9B\x071\x02\x02\x9B\x9C\x071\x02\x02\x9C\xA0\x03\x02\x02\x02\x9D\x9F" +
    "\n\x04\x02\x02\x9E\x9D\x03\x02\x02\x02\x9F\xA2\x03\x02\x02\x02\xA0\x9E" +
    "\x03\x02\x02\x02\xA0\xA1\x03\x02\x02\x02\xA1\xA3\x03\x02\x02\x02\xA2\xA0" +
    "\x03\x02\x02\x02\xA3\xA4\b\x1A\x03\x02\xA44\x03\x02\x02\x02\x07\x02\x80" +
    "\x88\x92\xA0\x04\b\x02\x02\x02\x03\x02";
  public static __ATN: ATN;
  public static get _ATN(): ATN {
    if (!ApiDefLexer.__ATN) {
      ApiDefLexer.__ATN = new ATNDeserializer().deserialize(
        Utils.toCharArray(ApiDefLexer._serializedATN),
      );
    }

    return ApiDefLexer.__ATN;
  }
}
